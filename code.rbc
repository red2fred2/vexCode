#pragma platform(VEX2)
#pragma competitionControl(Competition)
#include "Vex_Competition_Includes.c"

int deadzone(int value) {
		int deadzone = 10;
		if(value > deadzone) return value;
		else return 0;
}

void joystickDrive() {
	int up = vexRT(Ch3)
  int right = vexRT(Ch4)
  drive(up + right, up - right);
}

void drive(int left, int right) {
	motor[leftDrive] = deadzone(left);
	motor[rightDrive] = deadzone(right);
}

void lift(int left, int right) {
	motor[leftLift] = deadzone(left);
	motor[rightLift] = deadzone(right);
}

void liftControl() {
	int left = vexRT(Ch3Xmtr2);
	int right = vexRT(Ch2Xmtr2);
	lift(left, right);
}

void arm(int forward) {
	motor[armSlide] = deadzone(forward);
}

void armControl() {
	int forward = vexRT(Ch4Xmtr2);
}

void pre_auton() {

}

task autonomous() {

}

task usercontrol() {
	while(true) {
    //driver
	  joystickDrive();
    //copilot
    liftControl();
    armControl();
  }
}
